name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-all:
    name: Test PHP ${{ matrix.php-version }} using broker [${{ matrix.mqtt-broker }}]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['7.4', '8.0']
        mqtt-broker: ['mosquitto']
#        mqtt-broker: ['mosquitto', 'hivemq', 'emqx']

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpunit:9.5.0
          coverage: pcov

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --prefer-dist --ignore-platform-reqs

      - name: Generate certificates for tests
        run: |
          openssl genrsa -out .ci/tls/ca.key 2048
          openssl req -x509 -new -nodes -key .ci/tls/ca.key -days 1 -out .ci/tls/ca.crt -subj "/C=AT/ST=Vorarlberg/CN=php-mqtt Test CA"
          openssl genrsa -out .ci/tls/server.key 2048
          openssl req -new -key .ci/tls/server.key -out .ci/tls/server.csr -sha512 -subj "/C=AT/ST=Vorarlberg/CN=localhost"
          openssl x509 -req -in .ci/tls/server.csr -CA .ci/tls/ca.crt -CAkey .ci/tls/ca.key -CAcreateserial -out .ci/tls/server.crt -days 1 -sha512
          openssl genrsa -out .ci/tls/client.key 2048
          openssl req -new -key .ci/tls/client.key -out .ci/tls/client.csr -sha512 -subj "/C=AT/ST=Vorarlberg/CN=localhost"
          openssl x509 -req -in .ci/tls/client.csr -CA .ci/tls/ca.crt -CAkey .ci/tls/ca.key -CAcreateserial -out .ci/tls/client.crt -days 1 -sha256

      - name: Start Mosquitto message broker
        if: matrix.mqtt-broker == 'mosquitto'
        uses: ./.github/actions/mosquitto-mqtt-broker
        with:
          version: '1.6'
          ports: '1883:1883 8883:8883 8884:8884'
          certificates: ${{ github.workspace }}/.ci/tls
          config: ${{ github.workspace }}/.ci/mosquitto.conf

#      - name: Start Mosquitto message broker
#        if: matrix.mqtt-broker == 'mosquitto'
#        uses: Namoshek/mosquitto-github-action@v0.2.0
#        with:
#          version: '1.6'
#          port: 1883

      - name: Start HiveMQ message broker
        if: matrix.mqtt-broker == 'hivemq'
        uses: Namoshek/hivemq4-github-action@v0.1.0
        with:
          version: '4.4.4'
          port: 1883

      - name: Start EMQ X message broker
        if: matrix.mqtt-broker == 'emqx'
        uses: Namoshek/emqx-github-action@v0.1.0
        with:
          version: '4.2.5'
          port: 1883

      - name: Wait a bit until MQTT broker has started
        run: sleep 30

      - name: Run phpunit tests
        run: composer test
        env:
          MQTT_BROKER_HOST: 'localhost'
          MQTT_BROKER_PORT: 1883
          MQTT_BROKER_TLS_PORT: 8883
          MQTT_BROKER_TLS_WITH_CLIENT_CERT_PORT: 8884

      - name: Prepare paths for SonarQube analysis
        if: matrix.php-version == '8.0' && matrix.mqtt-broker == 'mosquitto'
        run: |
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" phpunit.coverage-clover.xml
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" phpunit.report-junit.xml

      - name: Run SonarQube analysis
        uses: sonarsource/sonarcloud-github-action@master
        if: matrix.php-version == '8.0' && matrix.mqtt-broker == 'mosquitto'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
